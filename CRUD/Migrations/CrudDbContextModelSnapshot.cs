// <auto-generated />
using System;
using CRUD.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRUD.Migrations
{
    [DbContext(typeof(CrudDbContext))]
    partial class CrudDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CRUD.Context.EvenTask", b =>
                {
                    b.Property<int>("EvenTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EvenTaskId");

                    b.ToTable("EvenTask");
                });

            modelBuilder.Entity("CRUD.Context.OddTask", b =>
                {
                    b.Property<int>("OddTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OddTaskId");

                    b.ToTable("OddTask");
                });

            modelBuilder.Entity("CRUD.Context.TaskHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EvenTaskId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int?>("OddTaskId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EvenTaskId");

                    b.HasIndex("OddTaskId");

                    b.ToTable("TaskHistory");
                });

            modelBuilder.Entity("CRUD.Context.TaskHistory", b =>
                {
                    b.HasOne("CRUD.Context.EvenTask", "EvenTask")
                        .WithMany("EvenTaskHistory")
                        .HasForeignKey("EvenTaskId");

                    b.HasOne("CRUD.Context.OddTask", "OddTask")
                        .WithMany("OddTaskHistory")
                        .HasForeignKey("OddTaskId");

                    b.Navigation("EvenTask");

                    b.Navigation("OddTask");
                });

            modelBuilder.Entity("CRUD.Context.EvenTask", b =>
                {
                    b.Navigation("EvenTaskHistory");
                });

            modelBuilder.Entity("CRUD.Context.OddTask", b =>
                {
                    b.Navigation("OddTaskHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
